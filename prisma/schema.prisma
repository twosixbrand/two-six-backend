generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  imageUrl    String
  gender      Gender
  isOutlet    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ErrorLog {
  id        Int      @id @default(autoincrement())
  message   String
  stack     String?
  componentStack String?
  app       String?  @db.VarChar(4)
  page      String?  @db.VarChar(20)
  createdAt DateTime @default(now())

  @@map("error_log")
}

enum Gender {
  HOMBRE
  MUJER
}

model Collection {
  code_col    String  @id @db.Char(1)
  name        String  @db.VarChar(50)
  description String? @db.VarChar(200)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("collection")
}

model Category {
  code_cat    String  @id @db.VarChar(2)
  name        String  @db.VarChar(50)
  description String? @db.VarChar(200)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("category")
}

model ConsecutiveCategory {
  code_con    Int     @id @default(autoincrement())
  code_cat    String  @db.VarChar(2)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("consecutive_category")
}

model Year_Production {
  code_year   String  @id @db.Char(1)
  year        String  @db.Char(4)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("year_production")
}

model Reference {
  ref         String  @id @db.Char(7)
  name        String  @db.VarChar(50)
  description String? @db.VarChar(200)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("reference")
}

model Consecutive_Reference {
  code_con    Int     @id @default(autoincrement())
  ref         String

  @@map("consecutive_reference")
}

model Clothing {
  id   String @id @db.Char(2)
  name String @db.VarChar(50)

  @@map("clothing")
}

model Type_Clothing {
  code String @id @db.Char(1)
  name String @db.VarChar(30)
}

model UserApp {
  code_user Int        @id @default(autoincrement())
  login     String     @unique
  name      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  userRoles UserRole[]

  @@map("user_app")
}

model Role {
  code_role Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userRoles UserRole[]

  @@map("role")
}

model UserRole {
  code_user_role Int      @id @default(autoincrement())
  user           UserApp  @relation(fields: [code_user], references: [code_user])
  code_user      Int
  role           Role     @relation(fields: [code_role], references: [code_role])
  code_role      Int 
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("user_role")
}

model proveedor {
  nit             String   @id
  razon_social    String
  direccion       String
  telefono        String
  email           String   @unique
  cuenta_bancaria String
  tipo_cuenta     String
  banco           String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

   @@map("proveedor")
}